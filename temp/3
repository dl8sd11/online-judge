#include <bits/stdc++.h>
using namespace std;
using ll = long long;

struct Line {
    ll A, B, L;
    ll get (int x) {
        return ll(A) * x + B;
    }
};
ll myfloor(ll a, ll b) {
    return a / b - ((a ^ b) < 0 && a % b);
}

ll inters (const Line &l1, const Line &l2) {
    return myfloor(l2.B - l1.B, l1.A - l2.A);
}

int main () {
    int n;
    cin >> n;
    int a, b, c;
    cin >> a >> b >> c;
    vector<int> x(n), p(n+1), dp(n+1);
    for (int i=0; i<n; i++) {
        cin >> x[i];
        p[i+1] = p[i] + x[i];
    }

    deque<Line> lines;
    lines.push_back({0, 0, -1});

    cout << "DP: ";
    for (int i=1; i<=n; i++) {
        while (lines.size() >=2 && lines[1].L <= p[i]) {
            lines.pop_front();
        }
        dp[i] = c + 1LL*a*p[i]*p[i] + b*p[i] + lines.front().get(p[i]);
        cout << dp[i] << " ";
        Line nw = Line({-2*a*p[i], dp[i]-ll(a+b)*p[i], 0});
        while (lines.size() >= 2 && lines.back().L > inters(lines.back(), nw)) {
            lines.pop_back();
        }
        nw.L = inters(lines.back(), nw) + 1;
        lines.push_back(nw);
    }
    cout << endl;
    cout << dp[n] << endl;


}
